# Copyright 2020 Intel Corporation
# SPDX-License-Identifier: Apache 2.0

# Application version used for health check request.
application.version=1.8

# Port number at which the specific service will be listening for incoming
# messages: Number
server.port=8042

# Path of logback configuration file: URI
# If not set, no configuration file will be set.
logging.config=logback-spring.xml

# Total number of threads the TaskExecutor is initalized with (Mandatory).
# The default value is 10.
thread.pool.size=10

# org.sdo.epid.test-mode (optional): Boolean
# The test-mode parameter indicates whether we should be using EPID development
# (sandbox) service for verification of the EPID key. Only the sandbox service
# allows usage of test keys.
#
# If set to true, onboarding of devices using test keys is allowed.
# Otherwise, onboarding using test keys is not allowed.
#
# If not set, the value defaults to false.
#
# Typically, we need to set this to true while testing C-Code Device with
# test EPID keys.
#
##### WARNING: This should be disabled in production environment #####
#org.sdo.epid.test-mode=

################################
# OCS Communication Properties #
################################

# The domain name and port at which OCS is running: URL
rest.api.server=https://localhost:9009/

# REST endpoint path at OCS for device state operations: URI
rest.api.device.state.path=v1/devices/{deviceId}/state

# REST endpoint path at OCS for device voucher operations: URI
rest.api.voucher.path=v1/devices/{deviceId}/voucher

# REST endpoint path at OCS to fetch service-info list: URI
rest.api.serviceinfo.path=v1/devices/{deviceId}/msgs

# REST endpoint path at OCS to fetch service-info: URI
rest.api.serviceinfo.value.path=v1/devices/{deviceId}/values/{valueId}

# REST endpoint path at OCS to get pre-service info: URI
rest.api.psi.path=v1/devices/{deviceId}/psi

# REST endpoint path at OCS for protocol error operations: URI
rest.api.error.path=v1/devices/{deviceId}/errors

# REST endpoint path at OCS to get device setup information: URI
rest.api.setupinfo.path=v1/devices/{deviceId}/setupinfo

# REST endpoint path at OCS for signature operations: URI
rest.api.signature.path=v1/signatures/{deviceId}

# REST endpoint path at OCS for cipher operations: URI
rest.api.ciphers.path=v1/ciphers/{deviceId}

# REST endpoint path at OCS for session info operations: URI
rest.api.session.path=v1/devices/{deviceId}/sessioninfo

# REST endpoint path at OCS to fetch owner resale support flag per device: URI
rest.api.owner.resale.support.path=v1/devices/{deviceId}/resale

# The keystore-type
client.ssl.key-store-type=PKCS12

# The truststore-type
client.ssl.trust-store-type=PKCS12

# Path to keystore file: URI
# The certificate inside keystore must have a certificate whose CN or SAN entries that allows hostname verification to succeed.
# For example, the sample keystore works when the other services are running in the same machine, since the certificate has DNS as localhost.
client.ssl.key-store=ops-keystore.p12

# Keystore password
client.ssl.key-store-password=MdkRS4_L9

# Path to truststore file: URI
# Must contain the certifcates capable of verifying OCS.
client.ssl.trust-store=ops-truststore

# Truststore password
client.ssl.trust-store-password=BdGR@7Dj0
